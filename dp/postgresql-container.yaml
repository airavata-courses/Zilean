apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql-container-claim0
  name: postgresql-container-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql-container
  name: postgresql-container
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql-container
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresql-container
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: audit_service_test
            - name: POSTGRES_PASSWORD
              value: audit_service_test
            - name: POSTGRES_USER
              value: audit_service_test
          image: postgres
          name: postgresql-container
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      restartPolicy: Always
      volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-container-claim0


--- 

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql-container
  name: postgresql-container
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgresql-container
status:
  loadBalancer: {}
