version: '3.1'

services:

  mongodb-container:
    image: mongo
    container_name: mongodb-container
    restart: always
    volumes:
      - './dockervolume/mongodb:/data/db'
    ports:
      - 27017:27017
    networks:
      - zilean-network

  postgresql-container:
    image: postgres
    container_name: postgresql-container
    restart: always
    ports:
      - '5433:5432'
    volumes:
      - './dockervolume/postgres:/data/db'
    environment:
      POSTGRES_PASSWORD: 'audit_service_test'
      POSTGRES_DB: 'audit_service_test'
      POSTGRES_USER: 'audit_service_test'
    networks:
      - zilean-network

  user-container:
    image: impiyush83/zilean-user:latest
    container_name: user-container
    restart: always
    environment:
      - MONGO_URI=mongodb://mongodb-container:27017
    ports:
      - 5005:5005
    depends_on:
      - mongodb-container
    networks:
      - zilean-network
  
  session-container:
    image: impiyush83/zilean-session:latest
    container_name: session-container
    restart: always
    environment:
      - MONGO_URI=mongodb://mongodb-container:27017/session-service
    ports:
      - 5004:5004
    depends_on:
      - mongodb-container
    networks:
      - zilean-network

  audit-container:
    image: impiyush83/zilean-audit:latest
    container_name: audit-container
    restart: always
    environment:
      - DB_USERNAME=audit_service_test
      - DB_PASSWORD=audit_service_test
      - DB_DATABASE=audit_service_test
      - DB_HOST=postgresql-container
      - DB_PORT=5432
      - DB_CONNECTION=postgres
      - DB_CONNECTION_POOL_MAX_CONNECTIONS=6
      - DB_CONNECTION_POOL_MIN_CONNECTIONS=1
      - SQL_LOGGING_ENABLED=true
    ports:
      - 5001:5001
    depends_on:
      - postgresql-container
    networks:
      - zilean-network

  kafaq-container:
    image: impiyush83/zilean-kafaq:latest
    container_name: kafaq-container
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka-container:9092
      - AUDIT_SERVICE=http://audit-container:5001
    depends_on:
      - kafka-container
      - audit-container
    networks:
      - zilean-network

  kafdq-container:
    image: rushikeshpharate/zilean-kafdq:latest
    container_name: kafdq-container
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka-container:9092
      - DATA_RETRIEVAL_SERVICE=http://data-retrieval-container:5003
    depends_on:
      - kafka-container
      - data-retrieval-container
    networks:
      - zilean-network

  kafpq-container:
    image: rushikeshpharate/zilean-kafpq:latest
    container_name: kafpq-container
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka-container:9092
      - PLOT_SERVICE=http://plot-container:5002
    depends_on:
      - kafka-container
      - plot-container
    networks:
      - zilean-network


  kafka-container:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    restart: always
    depends_on:
      - zookeeper-container
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-container:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-container:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - zilean-network

  zookeeper-container:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - zilean-network

  frontend-container:
    image: impiyush83/zilean-frontend:latest
    container_name: frontend-container
    restart: always 
    environment:
      - GATEWAY_SERVICE_URL=http://gateway-container:5006/
    depends_on:
      - gateway-container
    ports:
      - 3000:3000
    networks:
      - zilean-network

  gateway-container:
    image: impiyush83/zilean-gateway:latest
    container_name: gateway-container
    restart: always 
    environment:
      - AUDIT_SERVICE=http://audit-container:5001
      - SESSION_SERVICE=http://session-container:5004
      - USER_SERVICE=http://user-container:5005  
      - PLOT_SERVICE=http://plot-container:5002  
      - KAFKA_BROKER_URL=kafka-container:9092
      - PORT=5006
    depends_on:
      - session-container
      - user-container
      - audit-container
      - kafaq-container
      - kafdq-container
      - kafpq-container
      - data-retrieval-container
      - plot-container
    ports:
      - 5006:5006
    networks:
      - zilean-network
  
  data-retrieval-container:
    image: impiyush83/zilean-drs:latest
    container_name: data-retrieval-container
    restart: always 
    environment: 
      - KAFKA_BROKER_URL=kafka-container:9092
      - MONGO_URI=mongodb://mongodb-container:27017
    depends_on:
      - kafka-container
      - kafpq-container
      - plot-container
    ports:
      - 5003:5003
    networks:
      - zilean-network
  
  localstack-container:
    image: localstack/localstack:latest
    container_name: localstack-container
    environment: 
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=lambda,s3
    ports: 
      - '4566:4566'
    volumes: 
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - zilean-network

  plot-container:
    image: impiyush83/zilean-plot:latest
    container_name: plot-container
    restart: always 
    environment: 
      - KAFKA_BROKER_URL=kafka-container:9092
      - MONGO_URI=mongodb://mongodb-container:27017
      - AWS_ACCESS_KEY_ID=plot
      - AWS_SECRET_ACCESS_KEY=plot
      - AWS_REGION=us-east-1
      - USE_LOCAL=true
      - S3_HOST=http://localstack-container:4566
    depends_on:
      - localstack-container
    ports:
      - 5002:5002
    networks:
      - zilean-network

networks:
  zilean-network:
    name: zilean-network
    driver: bridge
